# config/config.yaml

## General BGEE pipeline parameters and paths
# BGEE run name identifier
run_name: "BGEE_RUN_1"
# Path to MGE installation (MitoGeneExtractor-vX.X.X file)
mge_path: "path/to/MitoGeneExtractor-1.9.6beta3/MitoGeneExtractor-v1.9.6beta3"
# Path to samples.csv
samples_file: "path/to/samples.csv"
# Path to references.csv (comment out 'sequence_reference_file' line below or remove path if 'run_gene_fetch' is true)
sequence_reference_file: ""
# Path to output directory. Will make final dir if it does not exist already
output_dir: "path/to/BGEE-RUN_1-out"

## Gene Fetch parameters (https://github.com/bge-barcoding/gene_fetch)
run_gene_fetch: true  # Set true to use gene-fetch to generate reference sequences
gene_fetch:
  email: "example@example.ac.uk"      # Required: Email for NCBI API
  api_key: "api_key1234567890"        # Required: NCBI API key
  gene: "cox1"                        # Target gene (e.g., cox1, rbcl, matk)
  input_type: "taxid"                                     # Does the 'samples.csv' contain a 'taxid' column or 'hierarchical' taxonomic information column per sample (default: taxid)? - see Gene Fetch docs for more detail
  genbank: true                       # Download GenBank records for corresponding pseudo-references
  # output_dir will be set automatically to {output_dir}/references/

## MGE running parameters (see https://github.com/cmayer/MitoGeneExtractor/tree/main?tab=readme-ov-file#command-line-options)
# Exonerate relative score threshold parameter
r:
  - 1
  - 1.3
  - 1.5
# Exonerate minimum score threshold parameter
s:
  - 50
  - 100
# Number of bp to extend beyond the Exonerate alignment
n: 0
# Genetic code (see https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi)
C: 5
# Consensus threshold (e.g. 0.5 = 50%)
t: 0.5
  
## Post-processing of aligned reads for cleaning (using five supplementary scripts)
# human coi filtering -> at content filtering -> statistical outlier filtering -> (optional) reference-base filtering -> 'cleaned' consensus generation
# Default parameters
fasta_cleaner:
  consensus_threshold: 0.5      # Threshold at which bases at each position must 'agree' to be incldued in the consensus (0.5 = ≥50% of bases at each position must agree)
  human_threshold: 0.95         # Threshold at which reads are removed due to similarity with human COI (0.95 = reads with ≥95% similarity are removed)
  at_difference: 0.1            # Threshold at which reads are removed due to AT content variation (0.1 = reads with AT% differing by >10% from the consensus are removed)
  at_mode: "absolute"           # At content filtering mode: Absolute (reads removed when AT% differs from consensus in either direction by `at_difference` (e.g. >10%)), Higher (reads removed when AT% is higher than `at_difference` threshold), Lower (reads removed when AT% is lower than `at_difference` threshold).
  outlier_percentile: 90.0      # Threshold at which reads are flagged as statistical outliers to the consensus and removed (90.0 = reads <90% 'similar' to the consensus are removed)
  disable_human: false          # If false, 'human_cox1_filter.py' will run
  disable_at: false             # If false, 'at_content_filter.py' will run
  disable_outliers: false       # If false, 'statistical_outliers.py' will run
  reference_dir: null           # To skip reference filtering enter "null"/"None". To enable reference filtering, provide path to a parent directory (flat structure) containing '{sample}_reference.fasta' files.

## Comparison and selection of the 'best' consensus sequence produced by MGE and fasta_cleaner for each sample (using fasta_compare.py)
run_fasta_compare: true  # Set false to skip fasta_compare step
fasta_compare:
  target: "cox1"    # Options: cox1, rbcl, matk
  verbose: false    # Enable verbose logging (default: false)
  rank: 3           # Barcode rank and below considered a 'pass' (default: 3)
  relaxed: false    # Use 'relaxed' ranking system (default: false)

## Resource allocation for each rule. Memory shown in Mb (mem_mb), e.g. 2048 = 2G memory.
# Rules have dynamic memory scaling upon retry (mem_mb * retry #).
rules:
  gene_fetch:
    mem_mb: 4096
    threads: 2
  fastp_pe_merge:
    mem_mb: 8192
    threads: 4
  clean_headers_merge:
    mem_mb: 4096
    threads: 2
  aggregate_clean_headers_logs_merge:
    mem_mb: 2048
    threads: 2
  fastp_pe_concat:
    mem_mb: 8192
    threads: 4  
  fastq_concat:
    mem_mb: 4096
    threads: 4
  gzip_trimmed:
    mem_mb: 4096
    threads: 4 
  aggregate_concat_logs:
    mem_mb: 2048
    threads: 2
  quality_trim:
    mem_mb: 8192
    threads: 4
  aggregate_trim_galore_logs:
    mem_mb: 2048
    threads: 2
  MitoGeneExtractor_merge:
    mem_mb: 20480
    threads: 6
    partition: medium        # Change according to your available partitions
  MitoGeneExtractor_concat:
    mem_mb: 20480
    threads: 6
    partition: medium        # Change according to your available partitions
  rename_and_combine_cons_merge:
    mem_mb: 2048
    threads: 4
  rename_and_combine_cons_concat:
    mem_mb: 2048
    threads: 4
  create_alignment_log_merge:
    mem_mb: 4096
    threads: 2
  create_alignment_log_concat:
    mem_mb: 4096
    threads: 2
  human_cox1_filter_merge:
    mem_mb: 10240
    threads: 8
  at_content_filter_merge:
    mem_mb: 15360
    threads: 8
  statistical_outlier_filter_merge:
    mem_mb: 8192
    threads: 8
  reference_filter_merge:
    mem_mb: 8192
    threads: 8
  consensus_generation_merge:
    mem_mb: 8192
    threads: 8
  aggregate_filter_metrics_merge:
    mem_mb: 2048
    threads: 1
  human_cox1_filter_concat:
    mem_mb: 10240
    threads: 8
  at_content_filter_concat:
    mem_mb: 15360
    threads: 8
  statistical_outlier_filter_concat:
    mem_mb: 4096
    threads: 1
  reference_filter_concat:
    mem_mb: 8192
    threads: 8
  consensus_generation_concat:
    mem_mb: 8192
    threads: 8
  aggregate_filter_metrics_concat:
    mem_mb: 2048
    threads: 1
  extract_stats_to_csv_merge:
    mem_mb: 4096
    threads: 4
  extract_stats_to_csv_concat:
    mem_mb: 4096
    threads: 4
  combine_stats_files:
    mem_mb: 1024
    threads: 1
  fasta_compare:
    mem_mb: 4096
    threads: 4
  remove_fasta_cleaner_files:
    mem_mb: 4096
    threads: 4
  remove_exonerate_intermediates:
    mem_mb: 4096
    threads: 2
  cleanup_files:
    mem_mb: 1024
    threads: 1
